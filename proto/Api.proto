
import "proto/Config.proto";

package Api.Proto;
option optimize_for = LITE_RUNTIME;

enum ErrorCode {
	kCodeNone = 0;
	kCodeSuccess = 1;
	kCodeIllegalRequest = 2;
	kCodeParseError = 3;
	kCodeIllegalState = 4;

	kCodeSubmitConstraintViolation = 32;
	kCodeSubmitConstraintConflict = 33;
	kCodeSubmitMutationConflict = 34;
	
	kCodeIllegalStorage = 128;
	kCodeIllegalView = 129;
}

message Mutation {
	enum Type {
		kTypeNone = 0;
		kTypeInsert = 1;
		kTypeModify = 2;
	}

	optional Type type = 1;
	optional int64 document_id = 2;
	optional string storage_name = 3;
	optional bytes buffer = 4;
}

message Constraint {
	enum Type {
		kTypeNone = 0;
		kTypeDocumentState = 1;
	}

	optional Type type = 1;
	optional string storage_name = 2;
	optional int64 document_id = 3;
	optional int64 sequence_id = 4;
	optional bool must_exist = 5;
	optional bool match_sequence_id = 6;
}

// -----------------------------------------------------------
// requests send by client
// -----------------------------------------------------------

enum ClientRequests {
	kCqQuery = 1;
	kCqShortTransact = 2;
	kCqTransaction = 3;
	kCqUpdate = 4;
	kCqApply = 5;

	kCqCreateStorage = 256;
	kCqCreateView = 257;
	kCqUnlinkStorage = 258;
	kCqUnlinkView = 259;

	kCqUploadExtern = 260;
	kCqDownloadExtern = 261;
	kCqShutdown = 262;
}

message CqQuery {
	optional string view_name = 1;
	optional int64 sequence_id = 2;
	repeated bytes keys = 3;
	optional bytes from_key = 4;
	optional bytes to_key = 5;
	optional uint32 limit = 6;
}

message CqShortTransact {
	repeated Mutation mutations = 1;
	repeated Constraint constraints = 2;
}

message CqTransaction {
}

message CqUpdate {
	optional int64 transaction_id = 1;
	repeated Mutation mutations = 2;
	repeated Constraint constraints = 3;
}

message CqApply {
	enum Type {
		kTypeNone = 0;
		kTypeSubmit = 1;
		kTypeSubmitCommit = 2;
		kTypeCommit = 3;
		kTypeRollback = 4;
	}

	optional int64 transaction_id = 1;
	optional Type type = 2;
}

message CqCreateStorage {
	optional string driver = 1;
	optional string identifier = 2;
	optional Db.Proto.StorageConfig config = 3;
}
message CqCreateView {
	optional string driver = 1;
	optional string identifier = 2;
	optional Db.Proto.ViewConfig config = 3;
}

message CqUnlinkStorage {
	required string identifier = 1;
}
message CqUnlinkView {
	required string identifier = 1;
}

message CqUploadExtern {
	required string file_name = 1;
	required bytes buffer = 2;
}
message CqDownloadExtern {
	required string file_name = 1;
}

message CqShutdown {
}

// -----------------------------------------------------------
// responses send by server
// -----------------------------------------------------------

enum ServerResponses {
	kSrFin = 1;
	kSrRows = 2;
	kSrBlob = 3;
}

message SrFin {
	message MutationInfo {
		optional int64 document_id = 1;
	}

	optional ErrorCode error = 1;

	// transaction id after creating a transaction
	optional int64 transaction_id = 2;
	// sequence id after committing a transaction
	optional int64 sequence_id = 3;

	repeated MutationInfo mutations = 4;
}

message SrRows {
	repeated bytes row_data = 1;
}

message SrBlob {
	required bytes buffer = 1;
}

